<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="TBClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        VhuTAAAAAElFTkSuQmCC
</value>
  </data>
</root>