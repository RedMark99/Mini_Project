<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>